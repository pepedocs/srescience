import{_ as e,c as t,o as a,d as i}from"./app.7e97e3a5.js";const h=JSON.parse('{"title":"Observability","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/observability.md"}'),o={name:"documentation/observability.md"},s=i('<h1 id="observability" tabindex="-1">Observability <a class="header-anchor" href="#observability" aria-hidden="true">#</a></h1><blockquote><p><strong>Formal Definition</strong>: Observability is a strategy that exposes service variable values to enable monitoring of a service. <br></p></blockquote><p>It\u2019s therefore an automation strategy with the following end goals.</p><ul><li>Expose service variable values</li><li>Enable service monitoring</li></ul><p>In practice, observability is usually a two-step process. The first step is the collection of service variables, and the second step is the exportation of these service variables to a <a href="./monitoring.html">monitoring</a> platform. <br></p>',5),r=[s];function n(l,c,b,_,p,d){return a(),t("div",null,r)}const m=e(o,[["render",n]]);export{h as __pageData,m as default};
