import{_ as e,c as t,o as r,d as i}from"./app.316cf983.js";const a="/images/service-fsm.png",s="/images/service-practical.png",f=JSON.parse('{"title":"Service","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/service.md"}'),o={name:"documentation/service.md"},n=i('<h1 id="service" tabindex="-1">Service <a class="header-anchor" href="#service" aria-hidden="true">#</a></h1><p>SRE practices can be reduced to their core subject - the abstract version of a software service. To precisely and consistently express an abstract service or simply a service, its parts, and its derivatives, a service needs to be defined first using a robust and widely accepted mathematical model. <br><br></p><blockquote><p><strong>Formal Definition</strong>: A service is a specialization of a <a href="https://en.wikipedia.org/wiki/Finite-state_machine" target="_blank" rel="noreferrer">finite-state machine</a> where the following are its specialized attributes.</p></blockquote><br><table><thead><tr><th>FSM Attribute or Behavior</th><th>Service Attribute or Behavior</th></tr></thead><tbody><tr><td>Input Alphabet (Sigma)</td><td>This is the set of stimulus that are generated by <a href="./.html">service modifiers</a>. For example, user input when logging into a service, or another service&#39;s interaction to another service through HTTP requests.</td></tr><tr><td>Set of States or S</td><td>The set of all <a href="./service-state.html">service states</a> that a service can be in. For example, uploading state, rate-limiting state, shutdown state, and etc.</td></tr><tr><td>Initial State or s0</td><td>The initial service state. This could be any known service state that happens before any other service states.</td></tr><tr><td>State Transition Function or (Delta)</td><td>The service function or logic that processes stimuli generated by service modifiers that cause a service state to transition to another service state.</td></tr></tbody></table><p><br><br><img src="'+a+'" alt="service"><br><br></p><p>In practice, it is often enough to intuit that a service is a bounded set of service states and leave the transition details in the service state definition. <br><br></p><blockquote><p><strong>Practical Definition</strong>: A service is a bounded set of service states. <br><br></p></blockquote><p><img src="'+s+'" alt="service"><br><br></p>',9),c=[n];function d(h,l,p,v,b,u){return r(),t("div",null,c)}const _=e(o,[["render",d]]);export{f as __pageData,_ as default};
