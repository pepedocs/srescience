import{_ as e,c as a,o as i,d as r}from"./app.7e97e3a5.js";const p=JSON.parse(`{"title":"SRE Science | Service Variable","description":"","frontmatter":{"title":"SRE Science | Service Variable","editLink":false,"head":[["meta",{"name":"Service Variable"},{"content":"A service state St is a set of service variables that can happen in at least one of St's lifetimes.\\n"}]]},"headers":[{"level":2,"title":"Observable, Partially Observable, Hidden","slug":"observable-partially-observable-hidden","link":"#observable-partially-observable-hidden","children":[]}],"relativePath":"documentation/service-variable.md"}`),t={name:"documentation/service-variable.md"},s=r('<h1 id="service-variable" tabindex="-1">Service Variable <a class="header-anchor" href="#service-variable" aria-hidden="true">#</a></h1><blockquote><p><strong>Formal Definition</strong>: A service variable is a mutable attribute of a service state.</p></blockquote><h2 id="observable-partially-observable-hidden" tabindex="-1">Observable, Partially Observable, Hidden <a class="header-anchor" href="#observable-partially-observable-hidden" aria-hidden="true">#</a></h2><p>A service variable can be <strong>Observable</strong> which means it can be observed all the time by a service observer, <strong>Partially Observable</strong> if there are instances where it is impossible to observe it by a service observer, or <strong>Hidden</strong> if it is impossible to observe it by a service observer in all of its instances in a service state. <br></p><p>In practice, service variables are what <a href="./monitoring.html">monitoring</a> observes to infer a service state. Usually, a combination of these service variables&#39; values is enough to infer that a service state is active or inactive. <br></p>',5),o=[s];function n(l,c,b,v,d,h){return i(),a("div",null,o)}const m=e(t,[["render",n]]);export{p as __pageData,m as default};
