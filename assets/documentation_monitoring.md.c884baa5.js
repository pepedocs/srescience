import{_ as e,c as i,o as a,d as o}from"./app.316cf983.js";const h=JSON.parse('{"title":"Monitoring","description":"","frontmatter":{},"headers":[{"level":2,"title":"Axioms","slug":"axioms"}],"relativePath":"documentation/monitoring.md"}'),t={name:"documentation/monitoring.md"},n=o('<h1 id="monitoring" tabindex="-1">Monitoring <a class="header-anchor" href="#monitoring" aria-hidden="true">#</a></h1><blockquote><p><strong>Formal Definition</strong>: Monitoring is an automation strategy for inferring and presenting service states given a collection of observable service variables. <br></p></blockquote><h2 id="axioms" tabindex="-1">Axioms <a class="header-anchor" href="#axioms" aria-hidden="true">#</a></h2><ol><li>A monitoring&#39;s performance is a function of the available observable service variables. <br></li></ol><p>In practice, the set of service variables is presented as metrics and is usually in a time-series data type. Inference of service states is achieved by the evaluation of a rule expressed in a specific monitoring platform query language. <br></p>',5),r=[n];function s(c,l,d,m,_,p){return a(),i("div",null,r)}const g=e(t,[["render",s]]);export{h as __pageData,g as default};
