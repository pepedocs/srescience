import{_ as e,c as a,o as t,d as i}from"./app.f78f8819.js";const g=JSON.parse('{"title":"Conventions","description":"","frontmatter":{},"headers":[{"level":3,"title":"Creating axioms","slug":"creating-axioms","link":"#creating-axioms","children":[]},{"level":3,"title":"Writing service names","slug":"writing-service-names","link":"#writing-service-names","children":[]},{"level":3,"title":"Practical service data format","slug":"practical-service-data-format","link":"#practical-service-data-format","children":[]}],"relativePath":"documentation/conventions.md"}'),n={name:"documentation/conventions.md"},r=i('<h1 id="conventions" tabindex="-1">Conventions <a class="header-anchor" href="#conventions" aria-hidden="true">#</a></h1><p>Throughout this website, global conventions are used to encourage consistency in the documentation.</p><p>The following are these conventions and can be skipped for now and referenced later as needed.</p><h3 id="creating-axioms" tabindex="-1">Creating axioms <a class="header-anchor" href="#creating-axioms" aria-hidden="true">#</a></h3><p><strong>Axioms</strong> are created as needed to support a definition.</p><h3 id="writing-service-names" tabindex="-1">Writing service names <a class="header-anchor" href="#writing-service-names" aria-hidden="true">#</a></h3><p>A service state name is written in <em>camelCase</em> form and is an identifier that must be descriptive to a service state such as <strong>UploadInProgress</strong>, <strong>UploadError</strong>, or <strong>UploadFinalizing</strong>.</p><h3 id="practical-service-data-format" tabindex="-1">Practical service data format <a class="header-anchor" href="#practical-service-data-format" aria-hidden="true">#</a></h3><p>Practical examples for service data such as service, service states, etc are presented in YAML format for usability and interoperability purposes.</p>',9),s=[r];function o(c,d,l,h,m,p){return t(),a("div",null,s)}const _=e(n,[["render",o]]);export{g as __pageData,_ as default};
