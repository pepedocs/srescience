import{_ as e,c as t,o as a,d as s}from"./app.411b39d2.js";const m=JSON.parse('{"title":"Service State","description":"","frontmatter":{},"headers":[{"level":2,"title":"Axioms","slug":"axioms","link":"#axioms","children":[]}],"relativePath":"documentation/service-state.md"}'),i={name:"documentation/service-state.md"},r=s('<h1 id="service-state" tabindex="-1">Service State <a class="header-anchor" href="#service-state" aria-hidden="true">#</a></h1><blockquote><p><strong>Formal Definition</strong>: A service state <em>St</em> is a set of <a href="./service-variable.html">service variables</a> that can exist in all of St&#39;s lifetimes.</p></blockquote><h2 id="axioms" tabindex="-1">Axioms <a class="header-anchor" href="#axioms" aria-hidden="true">#</a></h2><ol><li><p>A service state is identifiable by a subset of service variables and their values.</p></li><li><p>A service state St can be <strong>Active</strong> or <strong>Inactive</strong> where the former means that St is the current state of St&#39;s parent service while the latter means the opposite case.</p></li></ol><br><p>In practice, a service state can be monitored by monitoring a subset of service variables and their values. Using the naive cloud storage service as an example, service variables <code>uploadedBytes</code>, <code>uploadTimeElapsed</code>, and <code>uploadAverageThroughput</code> values can be used to monitor an <code>UploadThroughputLow</code> service state where it indicates that the service&#39;s current upload throughput is lower than its average upload throughput.</p>',6),o=[r];function c(n,d,l,h,v,p){return a(),t("div",null,o)}const _=e(i,[["render",c]]);export{m as __pageData,_ as default};
