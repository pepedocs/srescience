import{_ as e,c as i,o as t,d as r}from"./app.bc23e01a.js";const m=JSON.parse('{"title":"SRE Science | Observability","description":"","frontmatter":{"title":"SRE Science | Observability","editLink":false,"head":[["meta",{"name":"Observability"},{"content":"What is observability?\\n"}]]},"headers":[{"level":2,"title":"Effective Service Monitoring","slug":"effective-service-monitoring","link":"#effective-service-monitoring","children":[]},{"level":2,"title":"Efficient Service Monitoring","slug":"efficient-service-monitoring","link":"#efficient-service-monitoring","children":[]},{"level":2,"title":"","slug":"","link":"#","children":[]}],"relativePath":"documentation/observability.md","lastUpdated":1710684117000}'),o={name:"documentation/observability.md"},a=r('<h1 id="observability" tabindex="-1">Observability <a class="header-anchor" href="#observability" aria-hidden="true">#</a></h1><blockquote><p><strong>Formal Definition</strong>: Observability is a strategy that exposes service variable values to enable efficient monitoring of a service. <br></p></blockquote><p>It\u2019s therefore an automation strategy with the following end goals.</p><ul><li>Expose service variable values</li><li>Enable service monitoring</li></ul><h2 id="effective-service-monitoring" tabindex="-1">Effective Service Monitoring <a class="header-anchor" href="#effective-service-monitoring" aria-hidden="true">#</a></h2><p>Observability promotes effective service monitoring by increasing the availability of observable service variables and therefore providing flexibility in monitor implementation.</p><h2 id="efficient-service-monitoring" tabindex="-1">Efficient Service Monitoring <a class="header-anchor" href="#efficient-service-monitoring" aria-hidden="true">#</a></h2><p>Observability promotes efficient service monitoring by optimizing on exposure of the most valuable service variables in order to create effective monitors.</p><p>In practice, observability is usually a two-step process. The first step is the collection of service variables, and the second step is the exportation of these service variables to a <a href="./monitoring.html">monitoring</a> platform.</p><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><br>',11),n=[a];function s(c,l,v,f,b,d){return t(),i("div",null,n)}const p=e(o,[["render",s]]);export{m as __pageData,p as default};
