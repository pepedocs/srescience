import{_ as e,c as t,o as a,d as i}from"./app.411b39d2.js";const f=JSON.parse('{"title":"Service Modifier","description":"","frontmatter":{},"headers":[],"relativePath":"documentation/service-modifier.md"}'),o={name:"documentation/service-modifier.md"},s=i('<h1 id="service-modifier" tabindex="-1">Service Modifier <a class="header-anchor" href="#service-modifier" aria-hidden="true">#</a></h1><blockquote><p><strong>Formal Definition</strong>: A service modifier is anything that can cause a service&#39;s state to transition to another service state, or cause a change of value in at least one of the service variables in a service state. <br></p></blockquote><p>In practice, service actors such as a customer, an engineer such as an SRE engineer, another service that operates on a service, or the service acting on itself are all considered service modifiers because they can cause a service state to transition to another service state, or cause a change of value in at least one of the service variables in a service state.</p><p>As an example, when a user uploads a file to a cloud storage service, such service will probably transition from <code>UploadFinished</code> service state to <code>UploadRequested</code> service state or at least remain in the <code>UploadInProgress</code> service state while updating the <code>totalBytesUploaded</code> service variable. <br><br></p><blockquote><p><em>Speaking and listening was never a chicken-and-egg situation, the latter must go first to fill the brain.</em>\u200A-\u200AAnonymous</p></blockquote>',5),r=[s];function c(n,d,l,v,h,u){return a(),t("div",null,r)}const _=e(o,[["render",c]]);export{f as __pageData,_ as default};
