import{_ as e,c as a,o as i,d as r}from"./app.411b39d2.js";const _=JSON.parse('{"title":"Service Variable","description":"","frontmatter":{},"headers":[{"level":2,"title":"Axioms","slug":"axioms","link":"#axioms","children":[]}],"relativePath":"documentation/service-variable.md"}'),t={name:"documentation/service-variable.md"},s=r('<h1 id="service-variable" tabindex="-1">Service Variable <a class="header-anchor" href="#service-variable" aria-hidden="true">#</a></h1><blockquote><p><strong>Formal Definition</strong>: A service variable is a mutable attribute of a service state.</p></blockquote><h2 id="axioms" tabindex="-1">Axioms <a class="header-anchor" href="#axioms" aria-hidden="true">#</a></h2><ol><li><p>A change in a service variable&#39;s value may cause a service state to transition to another service state.</p></li><li><p>A service variable can be <strong>Observable</strong> which means it can be observed all the time by a service observer, <strong>Partially Observable</strong> if there are instances where it is impossible to observe it by a service observer, or <strong>Hidden</strong> if it is impossible to observe it by a service observer in all of its instances in a service state.</p></li></ol><br><p>In practice, service variables are what <a href="./monitoring.html">monitoring</a> observes to infer a service state. Usually, a combination of these service variables&#39; values is enough to infer that a service state is active or inactive. <br></p>',6),o=[s];function n(c,l,v,b,h,d){return i(),a("div",null,o)}const p=e(t,[["render",n]]);export{_ as __pageData,p as default};
