import{_ as e,c as t,o as a,d as i}from"./app.e25c196d.js";const m=JSON.parse('{"title":"Service State","description":"","frontmatter":{},"headers":[{"level":2,"title":"Axioms","slug":"axioms"}],"relativePath":"documentation/service-state.md"}'),s={name:"documentation/service-state.md"},r=i('<h1 id="service-state" tabindex="-1">Service State <a class="header-anchor" href="#service-state" aria-hidden="true">#</a></h1><blockquote><p><strong>Formal Definition</strong>: A service state (St) is a set of service variables <a href="./service-variable.html">service variables</a>.</p><ul><li><p><code>St = { v | v is an element of Sv }</code></p></li><li><p><code>Sv = Service Variable</code></p></li></ul></blockquote><h2 id="axioms" tabindex="-1">Axioms <a class="header-anchor" href="#axioms" aria-hidden="true">#</a></h2><ol><li><p>A service state is identifiable by a subset of service variables and their values.</p></li><li><p>A service state can be active or inactive. The former indicates that a service state is happening while the latter indicates the opposite.</p></li></ol><br> In practice, a service state can be monitored by monitoring a subset of service variables and their values. ',6),o=[r];function c(n,l,d,v,h,_){return a(),t("div",null,o)}const b=e(s,[["render",c]]);export{m as __pageData,b as default};
